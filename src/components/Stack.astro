---
import GitHubIcon from "../components/icons/GitHub.astro";
import AstroIcon from "../components/icons/stack/AstroIcon.astro";
import CSSIcon from "../components/icons/stack/CSS.astro";
import ExpressIcon from "../components/icons/stack/Express.astro";
import GitIcon from "../components/icons/stack/Git.astro";
import HtmlIcon from "../components/icons/stack/Html.astro";
import JavaScriptIcon from "../components/icons/stack/JavaScript.astro";
import LaravelIcon from "../components/icons/stack/Laravel.astro";
import MySQLIcon from "../components/icons/stack/MySQL.astro";
import NextJSIcon from "../components/icons/stack/NextJS.astro";
import NodeJSIcon from "../components/icons/stack/NodeJS.astro";
import NpmIcon from "../components/icons/stack/Npm.astro";
import PHPIcon from "../components/icons/stack/PHP.astro";
import ReactJSIcon from "../components/icons/stack/ReactJS.astro";
import TailwindIcon from "../components/icons/stack/Tailwind.astro";
import TypeScriptIcon from "../components/icons/stack/TypeScript.astro";
import VSCodeIcon from "../components/icons/stack/VSCode.astro";
import Postman from "./icons/stack/Postman.astro";
import DrupalIcon from "./icons/stack/Drupal.astro";
import MongoDB from "./icons/stack/MongoDB.astro";

import { getLangFromUrl, useTranslations } from "@/i18n/utils";
type tLang = (str: any) => any;
const lang = getLangFromUrl(Astro.url);
const t: tLang = useTranslations(lang);

type Skill = {
  name: String;
};

const SKL: Skill[] = t("skills");

const MY_STACK = {
  frontend: [
    { name: "Astro", icon: AstroIcon },
    { name: "React", icon: ReactJSIcon },
    { name: "TailwindCSS", icon: TailwindIcon },
    { name: "Next.js", icon: NextJSIcon },
    { name: "JavaScript", icon: JavaScriptIcon },
    { name: "HTML", icon: HtmlIcon },
    { name: "CSS", icon: CSSIcon },
  ],
  backend: [
    { name: "PHP", icon: PHPIcon },
    { name: "Laravel", icon: LaravelIcon },
    { name: "NodeJS", icon: NodeJSIcon },
    { name: "MySQL", icon: MySQLIcon },
    { name: "ExpressJS", icon: ExpressIcon },
  ],
  learning: [
    { name: "TypeScript", icon: TypeScriptIcon },
    { name: "Drupal", icon: DrupalIcon },
    { name: "MongoDB", icon: MongoDB },
  ],
  tools: [
    { name: "Git", icon: GitIcon },
    { name: "GitHub", icon: GitHubIcon },
    { name: "VSCode", icon: VSCodeIcon },
    { name: "Npm", icon: NpmIcon },
    { name: "Postman", icon: Postman },
  ],
};
---

<div class="flex items-center justify-center py-4 md:py-8 flex-wrap">
  <div
    class="grid grid-cols-1 md:grid-cols-2 gap-x-8 sm:grid-cols-1 sm:gap-x-4"
  >
    <article
      class="flex flex-col mb-8 lg:mb-4 gap-y-16 sm:gap-y-8 bg-gray-100 dark:bg-[#1A1A1A] rounded-[25px] lg:bg-gray-100 lg:dark:bg-[#1A1A1A] p-4 lg:rounded-[25px] sm:shadow-lg sm:bg-gray-100 sm:dark:bg-[#1A1A1A] sm:rounded-[25px]"
    >
      <div class="py-4 px-1">
        <div class="py-4 px-4 h-full flex flex-col justify-between">
          <h3
            class="text-center mb-8 text-xl font-bold lg:text-4xl lg:break-words bg-gradient-to-t from-[#54fbff] to-[#00a4c9] dark:from-[#c9fffe] dark:to-[#00cfef] bg-clip-text text-transparent"
          >
            Frontend
          </h3>
          <ul class="grid grid-cols-3 gap-4 flex-grow">
            {
              MY_STACK.frontend.map((skill) => (
                <li class="rounded-2xl  group flex flex-col justify-center items-center">
                  <skill.icon class="size-12 mb-2" />
                  <span class="text-sm w-full text-center">{skill.name}</span>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </article>
    <article
      class="flex flex-col gap-y-16 mb-8 lg:mb-4 bg-gray-100 dark:bg-[#1A1A1A] rounded-[25px] lg:bg-gray-100 lg:dark:bg-[#1A1A1A] p-4 lg:rounded-[25px] sm:shadow-lg sm:bg-gray-100 sm:dark:bg-[#1A1A1A] sm:rounded-[25px]"
    >
      <div class="py-4 px-1">
        <div class="py-4 px-4 h-full flex flex-col justify-between">
          <h3
            class="text-center mb-8 text-xl font-bold lg:text-4xl lg:break-words bg-gradient-to-t from-[#54fbff] to-[#00a4c9] dark:from-[#c9fffe] dark:to-[#00cfef] bg-clip-text text-transparent"
          >
            Backend
          </h3>
          <ul class="grid grid-cols-3 gap-4 flex-grow">
            {
              MY_STACK.backend.map((skill) => (
                <li class="rounded-2xl  group flex flex-col justify-center items-center">
                  <skill.icon class="size-12 mb-2" />
                  <span class="text-sm w-full text-center">{skill.name}</span>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </article>

    <article
      class="flex flex-col gap-y-16 bg-gray-100 dark:bg-[#1A1A1A] rounded-[25px] lg:bg-gray-100 lg:dark:bg-[#1A1A1A] p-4 lg:rounded-[25px] sm:col-span-2 mb-8 lg:mb-4 lg:shadow-lg sm:bg-gray-100 sm:dark:bg-[#1A1A1A] sm:rounded-[25px] sm:shadow-sm"
    >
      <div class="py-4 px-5 h-full flex flex-col justify-between">
        <h3
          class="text-center mb-8 text-xl font-bold lg:text-4xl lg:break-words bg-gradient-to-t from-[#ffb272] to-[#eab308] dark:from-[#ffebd4] dark:to-[#eab308] bg-clip-text text-transparent"
        >
          {t("skills.learn")}
        </h3>
        <ul class="grid grid-cols-3 gap-4 flex-grow">
          {
            MY_STACK.learning.map((skill) => (
              <li class="rounded-2xl  group flex flex-col justify-center items-center">
                <skill.icon class="size-12 mb-2" />
                <span class="text-sm w-full text-center">{skill.name}</span>
              </li>
            ))
          }
        </ul>
      </div>
    </article>
    <article
      class="flex flex-col gap-y-16 bg-gray-100 dark:bg-[#1A1A1A] rounded-[25px] lg:bg-gray-100 lg:dark:bg-[#1A1A1A] p-4 lg:rounded-[25px] sm:col-span-2 mb-8 lg:mb-4 lg:shadow-lg sm:bg-gray-100 sm:dark:bg-[#1A1A1A] sm:rounded-[25px] sm:shadow-sm"
    >
      <div class="py-4 px-4 h-full flex flex-col justify-between">
        <h3
          class="text-center mb-8 text-xl font-bold lg:text-4xl lg:break-words bg-gradient-to-t from-[#75dbff] to-[#0072ab] dark:from-[#def3ff] dark:to-[#00a8e8] bg-clip-text text-transparent"
        >
          {t("skills.tools")}
        </h3>
        <ul class="grid grid-cols-3 gap-4">
          {
            MY_STACK.tools.map((skill) => (
              <li class=" rounded-2xl  group flex flex-col fle justify-center items-center">
                <skill.icon class="size-12 mb-2" />
                <span class=" text-sm w-full text-center">{skill.name}</span>
              </li>
            ))
          }
        </ul>
      </div>
    </article>
    <div class="md:hidden">
      <!-- Aquí va la tarjeta en una sola columna -->
    </div>
    <div class="md:hidden">
      <!-- Aquí va la tarjeta en una sola columna -->
    </div>
  </div>
</div>
